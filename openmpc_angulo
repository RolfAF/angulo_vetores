#include <omp.h>
#include <cstdio>
#include <stdlib.h>
#include <time.h>
#include <math.h>

int main(int argc, char *argv[]){
    const int N = 2; const int T = 20;
    int a[N]; int b[N];
    int aux_dot = 0; int dot = 0;
    int aux_mag_a = 0; int aux_mag_b = 0;
    float mag_a = 0; float mag_b = 0;
    float angle = 0;
    srand (time(NULL));
    for (int x = 0; x < N; x++){
        a[x] = rand() % T - 10;
        b[x] = rand() % T - 10;
    }
    printf("A: %d,%d\n",a[0],a[1]);
    printf("B: %d,%d\n",b[0],b[1]);
    #pragma omp parallel private (aux_dot)
    {
        #pragma omp for
        for(int i = 0; i < N; i++){
            aux_dot += a[i] * b[i];
        }
        #pragma omp critical
        dot += aux_dot;        
    }
    printf("Dot: %d\n",dot);
    #pragma omp parallel
    {
        #pragma omp for
        for(int i = 0; i < N; i++){
            aux_mag_a += pow(a[i], 2);
            aux_mag_b += pow(b[i], 2);
        }
        #pragma omp critical
        {
            mag_a = sqrt(aux_mag_a);
            mag_b = sqrt(aux_mag_b);
            angle = acos(dot/(mag_a*mag_b))*180/3.1415;
        }
        
    }
    printf("Mag A: %f\n",mag_a);
    printf("Mag B: %f\n",mag_b);
    printf("Angulo: %f\n",angle);
    if(angle == 90){
        printf("Angulo reto\n");    
    }else if(angle < 90){
        printf("Angulo agudo\n");
    }else{
        printf("Angulo obtuso\n");    
    }

	return 0;
}
